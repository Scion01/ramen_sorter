{"remainingRequest":"/home/scion01/Downloads/ramen_sorter/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/scion01/Downloads/ramen_sorter/src/App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css&","dependencies":[{"path":"/home/scion01/Downloads/ramen_sorter/src/App.vue","mtime":1583667603000},{"path":"/home/scion01/Downloads/ramen_sorter/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scion01/Downloads/ramen_sorter/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/scion01/Downloads/ramen_sorter/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/scion01/Downloads/ramen_sorter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scion01/Downloads/ramen_sorter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucG9pbnRlZCB7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiQA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <v-toolbar\n        dark\n        prominent\n        src=\"https://imgix.bustle.com/mic/zokiuev9rmgdvp1c9rcfmq1felhbz8tzeczi0weyv9icnjtdzh3hohe4rplnzpso.jpg?w=1020&h=576&fit=crop&crop=faces&auto=format&q=70\"\n      >\n        <v-toolbar-title>Ramen Sorter</v-toolbar-title>\n        <v-spacer></v-spacer>\n  \n        <v-btn icon>\n          <v-icon>mdi-help</v-icon>\n        </v-btn>\n      </v-toolbar>\n      <div style=\"height: 100%;\">\n      <v-card>\n      <v-card-title>\n        The restaurants\n        <v-spacer></v-spacer>\n        <v-autocomplete\n          v-model=\"search\"\n          append-icon=\"mdi-magnify\"\n          label=\"Sort by country\"\n          single-line\n          hide-details\n          :items=\"countries\"\n          dense\n          chips\n          small-chips\n          multiple\n          solo\n          deletable-chips\n        ></v-autocomplete>\n      </v-card-title>\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"allrestaurants\"\n          :loading=\"loadingData\"\n          class=\"elevation-1\"\n          loading-text=\"Loading... Please wait\"\n          no-data-text=\"No restaurants Found!\"\n        >\n        <template v-slot:item=\"{item}\">\n          <tr @click=\"itemClicked(item)\" class=\"pointed\" >\n            <td class=\"text-xs-left\">{{ item.Brand | capitalize  }}</td>\n            <td class=\"text-xs-left\">{{ item.Variety | capitalize }}</td>\n            <td class=\"text-xs-left\">{{ item.Style | capitalize }}</td>\n            <td class=\"text-xs-left\">{{ item.Country | capitalize }}</td>\n            <v-chip :color=\"setStarsColor(item.Stars)\" >{{ item.Stars | checkExists }}</v-chip>\n            <td class=\"text-xs-left\">{{ item['Top Ten']  | checkExists}}</td>\n          </tr>\n        </template></v-data-table>\n        <!-- :search=\"search\" -->\n    </v-card>\n    <v-dialog v-model=\"descriptionDialog\" max-width=\"600\">\n       <v-card\n      class=\"mx-auto\"\n      max-width=\"600\"\n     \n    >\n      <v-img\n        class=\"white--text align-end\"\n        height=\"200px\"\n        :src=\"dialogImgLink\"\n      >\n     \n        <v-card-title >{{cardVal[\"Brand\"]}}</v-card-title>\n        \n      </v-img>\n  \n      <v-card-subtitle class=\"pb-1\">Variety: {{cardVal[\"Variety\"]}}</v-card-subtitle>\n  \n      <v-card-text class=\"text--primary\">\n        <v-layout row wrap>\n        <div class=\"ml-2\">Country: <img :src=\"cardVal['flag']\" /> {{cardVal[\"Country\"]}}</div>\n        <div style=\"margin-left:auto; margin-right:0;\"><v-icon small>mdi-phone</v-icon> {{cardVal[\"phone\"]}}</div>\n        </v-layout>\n         <v-layout row wrap>\n        <div v-if=\"rating\" class=\"ml-2\">Rating: <v-rating\n        v-model=\"rating\"\n        background-color=\"red lighten-3\"\n        color=\"red\"></v-rating></div>\n        <div style=\"text-align:right; margin-left:auto; margin-right:0;\">\n        <v-btn @click=\"likeThisElem(cardVal)\" class=\"ma-2\" tile large color=\"red\" icon>\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n        </div>\n         </v-layout>\n      </v-card-text>\n  \n      <!-- <v-card-actions>\n        <v-btn\n          color=\"orange\"\n          text\n        >\n          Share\n        </v-btn>\n  \n        <v-btn\n          color=\"orange\"\n          text\n        >\n          Call\n        </v-btn>\n      </v-card-actions> -->\n    </v-card>\n    </v-dialog>\n    <v-snackbar\n        v-model=\"snackbar\"\n        top\n        color=\"black\"\n        :timeout=\"timeout\"\n      >\n        {{ snackText }}\n        <v-btn\n          color=\"white\"\n          text\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </v-snackbar>\n      </div>\n  </v-app>\n</template>\n<script>\n// import { countries } from \"country-flags-svg\";\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  data: () => ({\n    search: [],\n    dialogImageLinks: ['https://thechutneylife.com/wp-content/uploads/2019/12/Peanut-Ramen-Noodle-Soup-The-Chutney-Life-8.jpg',\n    'https://www.recipetineats.com/wp-content/uploads/2019/01/Chicken-Ramen-Noodles_2a.jpg',\n    'https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fs3-ap-northeast-1.amazonaws.com%2Fpsh-ex-ftnikkei-3937bb4%2Fimages%2F3%2F8%2F1%2F9%2F22199183-3-eng-GB%2FCropped-1566246172%E5%B9%B8%E6%A5%BD%E8%8B%91%E3%81%8C%E8%B2%A9%E5%A3%B2%E3%81%99%E3%82%8B%E3%83%9F%E3%83%89%E3%83%AA%E3%83%A0%E3%82%B7%E3%82%92%E7%B7%B4%E3%82%8A%E8%BE%BC%E3%82%93%E3%81%A0%E3%81%A4%E3%81%91%E9%BA%BA20190820050542424_Data.jpg?source=nar-cms'],\n    loadingData: true,\n    dialogImgLink: '',\n    link: 'http://starlord.hackerearth.com/TopRamen',\n    countries: [],\n      headers: [\n        {\n          text: 'Brand Name',\n          align: 'start',\n          sortable: false,\n          value: 'Brand',\n        },\n        { text: 'Variety', value: 'Variety' },\n        { text: 'Style', value: 'Style' },\n        { text: 'Country', value: 'Country' },\n        { text: 'Stars', value: 'Stars' },\n        { text: 'Top Ten', value: 'Top Ten' },\n      ],\n      restaurants: [],\n      allrestaurants: [],\n      descriptionDialog: false,\n      cardVal: {},\n      rating: false,\n      snackText: '',\n      snackbar: false,\n      timeout: 5000,  \n  }),\n  methods:{\n    itemClicked(val){\n      this.cardVal = val;\n      this.rating = val.Stars;\n      this.dialogImgLink = this.dialogImageLinks[Math.floor((Math.random() * 100)%3)];\n      this.descriptionDialog = true;\n    },\n    setStarsColor(val){\n        if (val > 4) return 'green'\n      else if (val > 3) return 'orange'\n      else return 'red'\n    },\n    generateRandomPhone(){\n      return Math.floor(100000000 + Math.random() * 900000000);\n    },\n    likeThisElem(ele){\n      this.snackText = \"Restraunt Liked!!!\";\n      this.snackbar = true;\n      ele['liked'] = true;\n    }\n  },\n  created(){\n    const http = new XMLHttpRequest();\n    http.open(\"GET\", this.link, true);\n    let context = this;\n    http.setRequestHeader(\"content-type\", \"application/json\");\n    http.setRequestHeader(\"accept\", \"application/json\");\n    http.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\n    http.onreadystatechange = () => {\n      if (http.readyState === 4) {\n        if(http.status === 200) {\n          if(http.responseText) {\n            //  console.log((JSON.parse(http.responseText)));\n            //  console.log(countries)\n            context.restaurants = JSON.parse(http.responseText);\n            context.countries = context.restaurants.map((elem)=>{\n              return elem[\"Country\"];\n            })\n            context.allrestaurants = context.restaurants;\n            context.allrestaurants.forEach((e)=>{\n              e['phone'] = context.generateRandomPhone();\n              // console.log(e.Country)\n              // for(var c in countries){\n              //   console.log(c['name'])\n              //   console.log(e.Country)\n              //   if(c['name'] == e.Country){\n              //     e['flag'] = c['flag'];\n              //     console.log( e['flag'])\n              //   }\n              // }\n            });\n            // console.log(context.countries);\n            context.loadingData =false;\n            context.snackText = `${context.allrestaurants.length} results found!`\n            context.snackbar = true;\n          } else { \n            console.log(\"No data returned!!!\")\n            context.loadingData =false;\n          }\n        } else {\n          context.loadingData =false;\n          // vm.errorStatus = true;\n          // vm.errMsg = \"Not Authorized!\"\n          // return reject(http);\n        }\n      }\n    };\n    http.send();\n  },\n  watch:{\n    search(val){\n      if(val.length == 0){\n        this.allrestaurants = this.restaurants;\n      }else{\n        this.allrestaurants = this.restaurants.filter((elem)=>{\n          return val.includes(elem['Country'])\n        })\n      }\n    }\n  },\n  filters: {\n    capitalize(string) {\n      if (!string) return ''\n      return `${string.charAt(0).toUpperCase()}${string.substring(1)}`\n    },\n    checkExists(val){\n      if(val == \"NaN\")\n        return \"Not Found!\";\n      return val;\n    }\n  }\n};\n</script>\n<style scoped>\n.pointed {\n  cursor: pointer;\n}\n</style>\n"]}]}